.section .data
input_msg: .asciz "Enter a string: "
output_msg: .asciz "You entered: "
buffer: .skip 64

.section .text
.globl _start

_start:
    # выводим сообщение для ввода строки
    movl $4, %eax         # номер системного вызова для вывода
    movl $1, %ebx         # файловый дескриптор stdout
    movl $input_msg, %ecx # адрес сообщения
    movl $15, %edx        # длина сообщения
    int $0x80             # вызов системного прерывания

    # считываем строку из stdin
    movl $3, %eax         # номер системного вызова для ввода
    movl $0, %ebx         # файловый дескриптор stdin
    movl $buffer, %ecx    # адрес буфера для сохранения строки
    movl $64, %edx        # максимальная длина строки
    int $0x80             # вызов системного прерывания

    # выводим сообщение с введенной строкой
    movl $4, %eax         # номер системного вызова для вывода
    movl $1, %ebx         # файловый дескриптор stdout
    movl $output_msg, %ecx # адрес сообщения
    movl $12, %edx        # длина сообщения
    int $0x80             # вызов системного прерывания

    # выводим введенную строку
    movl $4, %eax         # номер системного вызова для вывода
    movl $1, %ebx         # файловый дескриптор stdout
    movl $buffer, %ecx    # адрес буфера с введенной строкой
    int $0x80             # вызов системного прерывания

    # завершаем программу
    movl $1, %eax         # номер системного вызова для завершения программы
    xorl %ebx, %ebx       # код возврата 0 (успешное завершение)
    int $0x80             # вызов системного прерывания
